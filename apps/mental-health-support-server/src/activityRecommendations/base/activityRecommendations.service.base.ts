/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ActivityRecommendations as PrismaActivityRecommendations,
} from "@prisma/client";

export class ActivityRecommendationsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ActivityRecommendationsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.activityRecommendations.count(args);
  }

  async activityRecommendationsItems(
    args: Prisma.ActivityRecommendationsFindManyArgs
  ): Promise<PrismaActivityRecommendations[]> {
    return this.prisma.activityRecommendations.findMany(args);
  }
  async activityRecommendations(
    args: Prisma.ActivityRecommendationsFindUniqueArgs
  ): Promise<PrismaActivityRecommendations | null> {
    return this.prisma.activityRecommendations.findUnique(args);
  }
  async createActivityRecommendations(
    args: Prisma.ActivityRecommendationsCreateArgs
  ): Promise<PrismaActivityRecommendations> {
    return this.prisma.activityRecommendations.create(args);
  }
  async updateActivityRecommendations(
    args: Prisma.ActivityRecommendationsUpdateArgs
  ): Promise<PrismaActivityRecommendations> {
    return this.prisma.activityRecommendations.update(args);
  }
  async deleteActivityRecommendations(
    args: Prisma.ActivityRecommendationsDeleteArgs
  ): Promise<PrismaActivityRecommendations> {
    return this.prisma.activityRecommendations.delete(args);
  }
}
